<?xml version="1.0" encoding="UTF-8"?>
<!-- Repository and Service layers -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

	<!-- import the dataSource definition -->
	<import resource="datasource-config.xml" />



	<context:component-scan base-package="com.tjcloud.platform" />

	<!-- enables scanning for @Transactional annotations -->
	<tx:annotation-driven />

	<!-- <bean id="executorService" class="java.util.concurrent.Executors" factory-method="newFixedThreadPool"> 
		<constructor-arg value="10" /> </bean> -->


	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="25" />
	</bean>
	<!-- -->
	<!-- enables scanning for @Task annotations -->
	<task:annotation-driven executor="taskExecutor" />
	<task:scheduler id="scheduler" pool-size="10" />
	<task:executor id="threadPoolTaskExecutor" pool-size="10" />
	<task:executor id="executorWithPoolSizeRange" pool-size="5-25"
		queue-capacity="100" />

	<!-- JPA EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:database="${jpa.database}" p:showSql="${jpa.showSql}" />
			<!-- the 'database' parameter refers to the database dialect being used. 
				By default, Hibernate will use a 'HSQL' dialect because 'jpa.database' has 
				been set to 'HSQL' inside file spring/data-access.properties -->
		</property>
		<!-- gDickens: BOTH Persistence Unit and Packages to Scan are NOT compatible, 
			persistenceUnit will win -->
		<property name="persistenceUnitName" value="platform" />
		<property name="packagesToScan" value="${entitymanager.packages.to.scan}" />
	</bean>

	<!-- Transaction manager for a single JPA EntityManagerFactory (alternative 
		to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />

	<!-- Post-processor to perform exception translation on @Repository classes 
		(from native exceptions such as JPA PersistenceExceptions to Spring's DataAccessException 
		hierarchy). -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- respositories -->
	<jpa:repositories base-package="com.tjcloud.platform.repository" />



	<!-- hibernate Session -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.HSQLDialect
				hibernate.show_sql=true
			</value>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.tjcloud.platform.model</value>
			</list>
		</property>
	</bean>

	<!-- Configure RESTTemplate with Basic Authentication -->
	<bean id="httpHost" class="org.apache.http.HttpHost">
		<constructor-arg value="${httpHost}" />
		<constructor-arg value="80" />
	</bean>

	<bean id="httpClientFactory"
		class="com.tjcloud.platform.utils.AuthHttpComponentsClientHttpRequestFactory">
		<constructor-arg ref="httpHost" />
		<constructor-arg value="${admin.user}" />
		<constructor-arg value="${admin.password}" />
	</bean>

	<bean class="org.springframework.web.client.RestTemplate">
		<constructor-arg ref="httpClientFactory" />
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
							<value>text/html;charset=UTF-8</value>
							<value>text/plain;charset=UTF-8</value>
							<value>appliction/json;charset=utf-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- import the security definition -->
	<import resource="security-config.xml" />


	<beans profile="local">
		<context:property-placeholder
			location="classpath:spring/databases/local-data-access.properties"
			system-properties-mode="OVERRIDE" />
		<context:property-placeholder
			location="classpath:spring/databases/local-data-access.properties"
			system-properties-mode="OVERRIDE" />
	</beans>

	<beans profile="develop">
		<context:property-placeholder
			location="classpath:spring/databases/develop-data-access.properties"
			system-properties-mode="OVERRIDE" />
	</beans>

	<beans profile="product">
		<context:property-placeholder
			location="classpath:spring/databases/product-data-access.properties"
			system-properties-mode="OVERRIDE" />
	</beans>

	<beans profile="release">
		<context:property-placeholder
				location="classpath:spring/databases/release-data-access.properties"
				system-properties-mode="OVERRIDE" />
	</beans>

</beans>