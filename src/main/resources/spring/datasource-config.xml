<?xml version="1.0" encoding="UTF-8"?>
<!-- Application context definition for PetClinic Datasource. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
	   xmlns:c="http://www.springframework.org/schema/c"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/jee
         http://www.springframework.org/schema/jee/spring-jee.xsd 
         http://www.springframework.org/schema/cache
         http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">

	<!-- ========================= DATASOURCE DEFINITION ========================= -->

	<!-- DataSource configuration for the tomcat jdbc connection pool See here 
		for more details on commons-dbcp versus tomcat-jdbc: http://blog.ippon.fr/2013/03/13/improving-the-performance-of-the-spring-petclinic-sample-application-part-3-of-5/ -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
		p:username="${jdbc.username}" p:password="${jdbc.password}"
		p:testWhileIdle="true" p:testOnBorrow="true" p:testOnReturn="false"
		p:validationInterval="30000" p:validationQuery="SELECT 1"
		p:timeBetweenEvictionRunsMillis="30000" p:maxActive="100"
		p:initialSize="10" p:maxWait="10000" p:minEvictableIdleTimeMillis="30000"
		p:minIdle="10" p:logAbandoned="false" p:removeAbandoned="true"
		p:removeAbandonedTimeout="60"
		p:jdbcInterceptors="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer" />

	
    <!-- Database initializer. If any of the script fails, the initialization stops. -->
    <!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
    <jdbc:initialize-database  data-source="dataSource">
        <jdbc:script encoding="utf-8" location="${jdbc.initLocation}"/>
        <jdbc:script encoding="utf-8" location="${jdbc.dataLocation}"/>
    </jdbc:initialize-database>
 

	<!-- Configurer that replaces ${...} placeholders with values from a properties 
		file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition 
		below) -->
	<!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
		<property name="maxIdle" value="${redis.maxIdle}" /> <property name="maxActive" 
		value="${redis.maxActive}" /> <property name="maxWait" value="${redis.maxWait}" 
		/> <property name="testOnBorrow" value="${redis.testOnBorrow}" /> </bean> -->
	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:hostName="${redis.host}" p:port="${redis.port}" p:usePool="true" />


	<!-- -->

	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>

	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
		c:template-ref="redisTemplate">



	</bean>

	<cache:annotation-driven cache-manager="cacheManager" />

	<!-- -->




	<beans profile="local">
		<context:property-placeholder
			location="classpath:spring/databases/local-data-access.properties"
			system-properties-mode="OVERRIDE" />
	</beans>

	<beans profile="develop">
		<context:property-placeholder
			location="classpath:spring/databases/develop-data-access.properties"
			system-properties-mode="OVERRIDE" />
	</beans>

	<beans profile="product">
		<context:property-placeholder
			location="classpath:spring/databases/product-data-access.properties"
			system-properties-mode="OVERRIDE" />
	</beans>
	
	<beans profile="release">
		<context:property-placeholder
				location="classpath:spring/databases/release-data-access.properties"
				system-properties-mode="OVERRIDE" />
	</beans>



</beans>
